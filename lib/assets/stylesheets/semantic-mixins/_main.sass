// This code isn't yet fully tested

// CUSTOM HTML RESETS
html
  text-rendering: optimizeLegibility
  -webkit-font-smoothing: antialiased

= css-techniques($font-size: 16)
  
  html
    font-size: relative-size($font-size,16)

  body
    font-size: 1em
    line-height: 1.4
  
  // Remove the gap between images and the bottom of their containers: h5bp.com/i/440
  img
    vertical-align: middle

  // Remove default fieldset styles.
  fieldset
    border: 0
    margin: 0
    padding: 0
  
  // Allow only vertical resizing of textareas.
  textarea
    resize: vertical

// USEFULL MIXINS
@function relative-size($size,$context)
  @return #{$size/$context}em

// This mixin is simple yet awesome to use, it'll give semantics to your sass code.
// Use it like so:
// ul.nav_menu
//  padding: 20px
//  +context(footer) // or +context("footer .menu_section") as a string when it's a class or id or a plural css selector.
//    background: green
= context($selector)
  #{$selector} &
    @content

// Call this mixin to place a decorative content around an element, e.g a tape holding a post it.
// When using the default configurations, you just need to set the dimensions, position and a background
= decorative-content($position: after, $absolute: true)
  @if $absolute
    position: relative

  &:#{$position}
    content: ""
    display: block
    @if $absolute
      position: absolute
    @content

= triangle($position: right, $size: 5px, $color: black)
  width: 0
  height: 0
  line-height: 0
  @if $position == top
    border-bottom: $size solid $color
    border-right: ($size*.75) solid transparent
    border-left: ($size*.75) solid transparent
  @if $position == bottom
    border-top: $size solid $color
    border-right: ($size*.75) solid transparent
    border-left: ($size*.75) solid transparent
  @if $position == left
    border-right: $size solid $color
    border-top: ($size*.75) solid transparent
    border-bottom: ($size*.75) solid transparent
  @if $position == right
    border-left: $size solid $color
    border-top: ($size*.75) solid transparent
    border-bottom: ($size*.75) solid transparent
  @if $position == top-left
    border-top: $size solid $color
    border-right: $size solid transparent
  @if $position == top-right
    border-top: $size solid $color
    border-left: $size solid transparent
  @if $position == bottom-right
    border-bottom: $size solid $color
    border-left: $size solid transparent
  @if $position == bottom-left
    border-bottom: $size solid $color
    border-right: $size solid transparent

// POSITIONING MIXINS
= absolute-centering($width: 0, $direction: left, $offset: 0)
  #{$direction}: 50%
  margin-#{$direction}: - ($width / 2) - $offset

= move($distance, $direction: bottom)
  position: relative
  #{$direction}: - $distance

// FONT MIXINS
=face($fontName, $fontFileName, $weight: normal, $style: normal)
  @font-face
    font-family: $fontName
    src: url('#{$fontFileName}.eot')
    src: url('#{$fontFileName}.eot?#iefix') format('embedded-opentype'), url('#{$fontFileName}.svg##{$fontName}') format('svg'), url('#{$fontFileName}.woff') format('woff'), url('#{$fontFileName}.ttf') format('truetype')
    font-weight: $weight
    font-style: $style